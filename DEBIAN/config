#!/bin/bash -x

TOMCAT_HOME="/var/lib/tomcat6"

# Source the debconf library
if [ -e "/usr/share/debconf/confmodule" ]; then
    . /usr/share/debconf/confmodule
fi
#Reminder: Don't echo to STDOUT. it messes up debconf

# functions to echo to STDERR or the install log instead of STDOUT
D1_LOG_DIR=/var/log/dataone
if [ ! -e $D1_LOG_DIR ]; then
    mkdir -p $D1_LOG_DIR
fi

logError () {
    echo "$@" 1>&2;
}

log () {
    now=$(date "+%Y-%m-%d %H:%M:%S %Z: ")
    echo "${now}$@" >> ${D1_LOG_DIR}/dataone-cn-metacat.install.log;
}

ACTION=${1} # how the script was called
NEW_VERSION=${2} # the version being installed/upgraded

log "dataone-cn-metacat.config script called with action: ${ACTION}"

db_get dataone-cn-metacat/cn.metacat.replication.certificate.filepath
log "cn.metacat.replication.certificate.filepath value is currently: ${RET}"
if [[ "${RET}" != /etc/dataone/client/certs/* ]]; then
    METACAT_PROPS="${TOMCAT_HOME}/webapps/knb/WEB-INF/metacat.properties"
    CERTFILE="/etc/dataone/client/certs/metacat.crt"
    KEYFILE="/etc/dataone/private/metacat.key"
    KEYPASS="your-key-passphrase-if-any"
    
    # pull values from an existing values metacat.properties file
    #if [ -e ${METACAT_PROPS} ];then
    #    CERTFILE=$(grep "metacat.replication.certificate.file" ${METACAT_PROPS})
    #    KEYFILE=$(grep "metacat.replication.privatekey.file" ${METACAT_PROPS})
    #    KEYPASS=$(grep "metacat.replication.certificate.file" ${METACAT_PROPS})
    #    log "Cert file is: ${CERTFILE}"
    #    log "Key file is: ${KEYFILE}"
    #    log "Key pass is: ${KEYPASS}"
    #fi
    
    # set default debconf selections from previous values
    #db_set dataone-cn-metacat/cn.metacat.replication.certificate.filepath ${CERTFILE}
    #db_set dataone-cn-metacat/cn.metacat.replication.privatekey.filepath ${KEYFILE}
    #db_set dataone-cn-metacat/cn.metacat.replication.privatekey.password ${KEYPASS}
    
    log "dataone-cn-metacat/config called."
    
    # Upgrade or install: check for previous values
    # TODO: make a setting for this switch
    if [[ "${ACTION}" == "configure" ]]; then
       # certificate location
       db_input high dataone-cn-metacat/cn.metacat.replication.certificate.filepath
       # private key location
       db_input high dataone-cn-metacat/cn.metacat.replication.privatekey.filepath
       # private key password 
       db_input high dataone-cn-metacat/cn.metacat.replication.privatekey.password
       
       db_go
    fi
else
    log "Upgrading the package. No configuration questions asked."
fi
exit 0