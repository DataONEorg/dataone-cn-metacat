#!/bin/bash

LONG_DATE=`date +%Y%m%d%H%M%S`

TOMCAT=tomcat6
TOMCAT_USER=tomcat6
TOMCAT_HOME=/var/lib/tomcat6
APACHE_CONF=/etc/apache2
JK_CONF=knb_jk.conf

PG=postgresql-8.4
PG_CONF=/etc/postgresql/8.4/main

PG_USER=postgres
DB_USER=metacat
DB_PASS=metacat
SOURCE_DIR=/usr/share/metacat
SCRIPT_DIR=${SOURCE_DIR}/debian
METACAT_VAR=/var/metacat
METACAT_VAR_SUBDIRS=".knb logs data inline-data documents expanded-archives temporary"

D1_CONF=/etc/dataone
NODE_PROPS="$D1_CONF/node.properties"
###############################################################################
# Parse node.properties file for various needed parameters to set elsewhere
###############################################################################

HAZELCAST_INTERFACE=""
SPACER="        "
for ip in `egrep 'cn.iplist=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
do
    IP_XML_NODE="<interface>${ip}<\/interface>"
    HAZELCAST_INTERFACE=${HAZELCAST_INTERFACE}${IP_XML_NODE}'\n'${SPACER}
done

#replace the string <interface>127.0.0.1</interface> with the environment's iplist

sed -i.bak --regexp-extended "s/<interface>127\.0\.0\.1<\/interface>/${HAZELCAST_INTERFACE}/;" ${D1_CONF}/storage/hazelcast.xml

#<interface>127.0.0.1</interface>

NODE_ID=`egrep 'cn.nodeId=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
D1CLIENT_CERTIFICATE_DIRECTORY=`egrep 'D1Client.certificate.directory=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
D1CLIENT_CERTIFICATE_FILENAME=`egrep 'D1Client.certificate.filename=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
D1ClIENT_CERTIFICATE=${D1CLIENT_CERTIFICATE_DIRECTORY}'/'${D1CLIENT_CERTIFICATE_FILENAME}

D1ClIENT_CERTIFICATE=${D1ClIENT_CERTIFICATE//\//\\\/}


###############################################################################
# Install metacat war file
###############################################################################

## Stop tomcat
echo "Stopping Tomcat"
/etc/init.d/${TOMCAT} stop

## backup the old war file
if [ -e ${TOMCAT_HOME}/webapps/knb.war.current ]
then
  echo "Backing up ${TOMCAT_HOME}/webapps/knb.war to ${TOMCAT_HOME}/webapps/knb.war.${LONG_DATE}"
  mv ${TOMCAT_HOME}/webapps/knb.war.current ${TOMCAT_HOME}/webapps/knb.war.${LONG_DATE}
fi  

## remove the knb application directory
if [ -d ${TOMCAT_HOME}/webapps/knb ]
then
  echo "Removing the old metacat application directories"
  rm -rf ${TOMCAT_HOME}/webapps/knb
fi 

## copy the new war file into the webapps directory
echo copying new knb.war file to ${TOMCAT_HOME}/webapps/knb.war
cp ${SOURCE_DIR}/knb.war ${TOMCAT_HOME}/webapps/knb.war

## expand the war file
CURR_DIR=`pwd`

## make knb directory and extract knb.war into it.
echo "Making knb application directory: ${TOMCAT_HOME}/webapps/knb"
mkdir ${TOMCAT_HOME}/webapps/knb
cd ${TOMCAT_HOME}/webapps/knb

echo "extracting knb.war into ${TOMCAT_HOME}/webapps/knb"
jar -xvf ${TOMCAT_HOME}/webapps/knb.war > /dev/null

mv ${TOMCAT_HOME}/webapps/knb.war ${TOMCAT_HOME}/webapps/knb.war.current

## replace the token HOSTNAME in the properties file to a hostname beginning with cn in the /etc/hosts file
sleep 5
#HOSTNAME=`/usr/bin/perl -nle 'if (/^([\d\.]+)\s+(cn[^\s]+)\s*/) {$hostname= $2;exit;} END{print $hostname}' /etc/hosts`

## replace the token HOSTNAME in the site file to a hostname as found by issuing a hostname -f
HOSTNAME=`/bin/hostname -f`

if [ "$HOSTNAME" != "" ]
then
        sed -i.bak --regexp-extended  "s/(server\.name=).*/\1${HOSTNAME}/;" /home/rwaltz/metacat.properties
else
        echo "HOSTNAME can not be set in ${TOMCAT_HOME}/webapps/knb/WEB-INF/metacat.properties"
fi
# change a lot of properties for this configuration
sed -i --regexp-extended "s/(application\.deployDir=).*/\1\/var\/lib\/tomcat6\/webapps/;
        s/(application\.backupDir=).*/\1\/var\/metacat\/\.knb/;
        s/(application\.context=).*/\1knb/;
        s/(application\.debugOutputFile=).*/\1\/var\/metacat\/temporary\/metacat.debug/;
        s/(application\.delimiteredOutputFile=).*/\1\/var\/metacat\/temporary\/metacat\.debug\.delimitered/;
        s/(database\.user=).*/\1metacat/;
        s/(database\.password=).*/\1metacat/;
        s/(database\.type=).*/\1postgres/;
        s/(database\.driver=).*/\1org\.postgresql\.Driver/;
        s/(database\.adapter=).*/\1edu\.ucsb\.nceas\.dbadapter\.PostgresqlAdapter/;
        s/(auth\.administrators=).*/\1uid\=dataone\_cn\_metacat\,o\=DATAONE\,dc\=ecoinformatics\,dc\=org/;
        s/(replication\.logdir=).*/\1\/var\/metacat\/logs/;
        s/(replication\.certificate\.file=).*/\1${D1ClIENT_CERTIFICATE}/;
        s/(replication\.privatekey\.file=).*/\1${D1ClIENT_CERTIFICATE}/;
        s/(replication\.privatekey\.password=).*/\1/;
        s/(D1Client\.CN_URL=).*/\1https\:\/\/localhost\/cn/;
        s/(D1Client\.certificate\.file=).*/\1${D1ClIENT_CERTIFICATE}/;
        s/(dataone\.nodeType=).*/\1cn/;
        s/(dataone\.memberNodeId=).*/\1${NODE_ID}/;
        s/(#)(dataone\.hazelcast\.configFilePath=\/etc\/dataone\/storage\/hazelcast\.xml)/\2/;"\
        /home/rwaltz/metacat.properties


# the CN has its own log4j configuration

cp ${SCRIPT_DIR}/log4j.properties ${TOMCAT_HOME}/webapps/knb/WEB-INF/
chown -R ${TOMCAT_USER}.${TOMCAT_USER} ${TOMCAT_HOME}/webapps/knb
echo cd to $CURR_DIR
cd $CURR_DIR

chmod -R  +x ${TOMCAT_HOME}/webapps/knb/cgi-bin

###############################################################################
# Create Metacat External File Space
###############################################################################

## Create the /var/metacat directory
if [ ! -d ${METACAT_VAR} ]
then
  echo "Making Metacat utility directory: /var/metacat"
  mkdir ${METACAT_VAR}
fi

## Change the ownership of the /var/metacat directory to be the tomcat user.
echo "changing ownership of /var/metacat to ${TOMCAT_USER}"
chown -R ${TOMCAT_USER}.${TOMCAT_USER} ${METACAT_VAR}

## Create the dataone logging directory
for SUBDIR in ${METACAT_VAR_SUBDIRS}
do
	FULL_VAR_SUBDIR=${METACAT_VAR}/${SUBDIR}
	if [ ! -d ${FULL_VAR_SUBDIR} ]
	then
	  echo "Making Metacat application directory: ${FULL_VAR_SUBDIR}"
	  mkdir ${FULL_VAR_SUBDIR}
	  echo "changing ownership of ${FULL_VAR_SUBDIR}  to ${TOMCAT_USER}"
	  chown ${TOMCAT_USER}.${TOMCAT_USER} ${FULL_VAR_SUBDIR}
	fi
done
###############################################################################
# Configure Tomcat
###############################################################################


# Configure the tomcat server
#cp ${SCRIPT_DIR}/server.xml ${TOMCAT_HOME}/conf/

# Configure the context file
cp ${SCRIPT_DIR}/knb.xml ${TOMCAT_HOME}/conf/Catalina/localhost/

# Add permissions needed by metacat and geoserver
cp ${SCRIPT_DIR}/51metacat.policy ${TOMCAT_HOME}/conf/policy.d/

###############################################################################
# Configure Apache
###############################################################################

## Stop apache
echo "Stopping Apache"
/etc/init.d/apache2 stop

## copy in jk mount configuration file

if [ -e ${APACHE_CONF}/jk_mount/${JK_CONF} ]
then 
  JK_DIFF=`diff ${SCRIPT_DIR}/${JK_CONF} ${APACHE_CONF}/jk_mount/${JK_CONF}`
  if [ "${JK_DIFF}" != "" ]
  then
    echo "Backing up ${APACHE_CONF}/jk_mount/${JK_CONF} to ${APACHE_CONF}/jk_mount/${JK_CONF}.${LONG_DATE}"
    mv ${APACHE_CONF}/jk_mount/${JK_CONF} ${APACHE_CONF}/jk_mount/${JK_CONF}.${LONG_DATE}
  fi
fi
echo "Copying ${JK_CONF} site file to ${APACHE_CONF}/jk_mount/"
cp ${SCRIPT_DIR}/${JK_CONF} ${APACHE_CONF}/jk_mount/


###############################################################################
# Configure Postgres
###############################################################################

## modify pg_hba.conf
PG_HBA_IS_MODIFIED=`grep "metacat metacat" ${PG_CONF}/pg_hba.conf`
if [ "${PG_HBA_IS_MODIFIED}" == "" ]
then
  echo "backing up ${PG_CONF}/pg_hba.conf to ${PG_CONF}/pg_hba.conf.bak"
  cp ${PG_CONF}/pg_hba.conf ${PG_CONF}/pg_hba.conf.bak
  chown postgres ${PG_CONF}/pg_hba.conf
  chgrp postgres ${PG_CONF}/pg_hba.conf

  echo "appending 'host metacat metacat 127.0.0.1 255.255.255.255 password' to ${PG_CONF}/pg_hba.conf"
  echo "host metacat metacat 127.0.0.1 255.255.255.255 password" >> ${PG_CONF}/pg_hba.conf
fi
## postgresql.conf  max_connections = 200
PG_MAXCON_IS_MODIFIED=`egrep "max_connections *= *200" ${PG_CONF}/postgresql.conf`
if [ "${PG_MAXCON_IS_MODIFIED}" == "" ]
then
	sed -i.bak  's/\(max_connections\s*\=\s*\)[\d]+/\1 200/;' ${PG_CONF}/postgresql.conf
fi
## create metacat schema and user
echo "Creating metacat database schema"
su ${PG_USER} -c "createdb metacat"

echo "Creating metacat user" 
su ${PG_USER} -c "psql -c \"CREATE USER ${DB_USER} WITH UNENCRYPTED PASSWORD '${DB_PASS}'\""

## Restart the postgres db
echo "Restarting postgres database"
/etc/init.d/${PG} restart

###############################################################################
# Start Apache and Tomcat
###############################################################################

## Start Apache
/etc/init.d/apache2 start

## Start Tomcat
echo "starting Tomcat server"

/etc/init.d/${TOMCAT} start

#open up the correct port for hazelcast
ufw allow 5701
